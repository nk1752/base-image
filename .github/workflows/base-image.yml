name: dotnet8 -> ubuntu22

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ART_REGISTORY: "appli.jfrog.io"
  ART_REPO: "local-docker/alm"
  JF_USER: "nk1752@outlook.com"

jobs:
  ubuntu-base-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      packages: write
      id-token: write

    steps:
      
      - name: checkout
        uses: actions/checkout@v4.1.6

        # build docker image from Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Docker login to Jfrog
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ env.JF_USER }}
          password: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}
          registry: ${{ env.ART_REGISTORY }}

      # extract metadata from Git reference and github events
      - name: metadata
        id: metadata
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/ubuntu:22.4.0
          tags: |
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr
          labels: |
            org.opencontainers.image.title=ubuntu
            org.opencontainers.image.description=ubuntu base image
            org.opencontainers.image.source=nadeem



      - name: build dotnet8 base image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.ubuntu22
          tags: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/${{ env.ART_FOLDER }}/${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_IMAGE_TAG }}
          labels: OpehShift="ubuntu22" ALM="dotnet8-sdk"
          push: true
        env:
          DOCKER_BUILDKIT: 1
          ART_FOLDER: base-images
          BASE_IMAGE_NAME: ubuntu
          BASE_IMAGE_TAG: v22.4.0
          BASE_IMAGE_LABELS: ${{ steps.metadata.outputs.labels }}

  
  dotnet8-base-images:
    runs-on: ubuntu-latest
    needs: ubuntu-base-image

    permissions:
      contents: read
      pull-requests: write
      packages: write
      id-token: write

    steps:
      - name: checkout
        uses: actions/checkout@v4.1.6

        # build docker image from Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Docker login to Jfrog
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ env.JF_USER }}
          password: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}
          registry: ${{ env.ART_REGISTORY }}

      - name: build dotnet8 sdk image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.dotnet8-sdk
          tags: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/${{ env.ART_FOLDER }}/${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_IMAGE_TAG }}
          #tags: appli.jfrog.io/nk-docker/ubuntu22-base-image:v2.0.0
          push: true
          labels: OpehShift="ubuntu22 base image" ALM="dotnet8-sdk"
        env:
          DOCKER_BUILDKIT: 1
          ART_FOLDER: dotnet
          BASE_IMAGE_NAME: dotnet8-sdk
          BASE_IMAGE_TAG: v8

      - name: build dotnet8 runtime image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.dotnet8-runtime
          tags: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/${{ env.ART_FOLDER }}/${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_IMAGE_TAG }}
          push: true
        env:
          DOCKER_BUILDKIT: 1
          ART_FOLDER: alm/dotnet
          BASE_IMAGE_NAME: dotnet8-runtime
          BASE_IMAGE_TAG: v8

      - name: build dotnet8 aspnet image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.dotnet8-aspnet
          tags: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_IMAGE_TAG }}
          push: true
        env:
          DOCKER_BUILDKIT: 1
          ART_FOLDER: dotnet
          BASE_IMAGE_NAME: dotnet8-aspnet
          BASE_IMAGE_TAG: v8
