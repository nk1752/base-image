name: dotnet8 -> ubuntu22

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ART_REGISTORY: "appli.jfrog.io"
  ART_REPO: "local-docker/alm"
  JF_USER: "nk1752@outlook.com"
  

jobs:
  ubuntu-base-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      packages: write
      id-token: write

    steps:

      - name: setup env
        shell: bash
        run: |
          echo ART_REGISTORY --> ${{ env.ART_REGISTORY }}
          echo "BASE_TEST=${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/base-images/ubuntu" >> $GITHUB_ENV
          
      
      - name: checkout
        uses: actions/checkout@v4.1.6

        # build docker image from Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Docker login to Jfrog
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ env.JF_USER }}
          password: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}
          registry: ${{ env.ART_REGISTORY }}

      - name: setup jfrog cli
        uses: jfrog/setup-jfrog-cli@v4.1.3
        with:
          version: 2.1.0
        env:
          JF_URL: ${{ env.ART_REGISTORY }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}
          JF_USER: ${{ env.JF_USER }}

      - name: check jf cli version
        run: jf --version


      - name: metadata
        id: metadata
        uses: docker/metadata-action@v5.5.0
        with:
          images: |
            ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/base-images/ubuntu:22.04
            ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/base-images/ubuntu:latest
            ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/dotnet/8-sdk:8
          tags: |
            # branch event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=branch
            # tag event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
            # pull request event
            type=ref,enable=true,priority=600,prefix=pr-,suffix=,event=pr

        
      - name: build dotnet8 base image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.ubuntu22
          load: true
          tags: |
            ${{ env.IMAGE }}:22.04
            ${{ env.IMAGE }}:latest
          labels: |
            OpenShift=ubuntu22
            "ALM=dotnet8-sdk"
        env:
          IMAGE: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/base-images/ubuntu

      - name: docker images
        run: |
          echo "*********** docker images ***********"
          docker images

      - name: Jfrog Xray scan
        run: |
          echo "*********** Jfrog Xray scan ***********"
          jf --version
          jf xr scan ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/base-images/ubuntu:22.04 --fail=false


        # ************ base image ************
      - name: build dotnet8 base image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.ubuntu22
          push: true
          tags: |
            ${{ env.IMAGE }}:22.04
            ${{ env.IMAGE }}:latest
          labels: |
            OpenShift=ubuntu22
            "ALM=dotnet8-sdk"
        env:
          IMAGE: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/base-images/ubuntu

      
  # ************ dotnet8 images job ************
  dotnet8-base-images:
    runs-on: ubuntu-latest
    needs: ubuntu-base-image

    permissions:
      contents: read
      pull-requests: write
      packages: write
      id-token: write

    steps:
      - name: checkout
        uses: actions/checkout@v4.1.6

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Docker login to Jfrog
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ env.JF_USER }}
          password: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}
          registry: ${{ env.ART_REGISTORY }}
      
        # ************ sdk image ************
      - name: build dotnet8 sdk image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.dotnet8-sdk
          push: true
          tags: |
            ${{ env.IMAGE }}:8
            ${{ env.IMAGE }}:dotnet8-sdk
          labels: |
            "OpehShift=ubuntu22"
            ALM="dotnet8-sdk"
        env:
          IMAGE: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/dotnet/8-sdk
          
        # ************ runtime image ************
      - name: build dotnet8 runtime image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.dotnet8-runtime
          push: true
          tags: |
            ${{ env.IMAGE }}:8-runtime
            ${{ env.IMAGE }}:dotnet8-runtime
        env:
          IMAGE: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/dotnet/8-runtime

        # ************ aspnet image ************
      - name: build dotnet8 aspnet image
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          file: ./dockerfiles/Dockerfile.dotnet8-aspnet
          push: true
          tags: |
            ${{ env.IMAGE }}:8-aspnet
            ${{ env.IMAGE }}:dotnet8-aspnet
        env:
          IMAGE: ${{ env.ART_REGISTORY }}/${{ env.ART_REPO }}/dotnet/8-aspnet
          
