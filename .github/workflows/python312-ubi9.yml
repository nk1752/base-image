name: python 3.12 - ubi9

on:
  
  workflow_dispatch:
    inputs:
      publish:
        description: "push to artifactory"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
env:
  PROJECT_NAME: "python312-ubi9"

  ART_REGISTORY: "rgnadeem.jfrog.io"
  ART_GROUP: "nk"
  JF_USER: "nadeem.khalid@regions.com"
 

jobs:
  build-push-base-images:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      packages: write
      id-token: write

    steps:


      - name : Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: checkout
        uses: actions/checkout@v4

        # build docker image from Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login to Jfrog
        uses: docker/login-action@v2
        with:
          username: ${{ env.JF_USER }}
          password: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}
          registry: ${{ env.ART_REGISTORY }}

      - name: build docker python-3.12 image
        env:
          ART_REPO: ${{env.ART_GROUP}}/${{env.PROJECT_NAME}}
          IMAGE_PYTHON: "python-3.12"
          IMAGE_PYTHON_TAG: "v1.0.0"
        run: |
          docker build -f ./${{env.PROJECT_NAME}}/Dockerfile \
                -t ${{env.IMAGE_PYTHON}} \
                --build-arg IMAGE_NAME="${{env.IMAGE_PYTHON}}" .
          docker images
          docker tag ${{ env.IMAGE_PYTHON}} ${{env.ART_REGISTORY}}/${{env.ART_REPO}}/${{ env.IMAGE_PYTHON}}:${{ env.IMAGE_PYTHON_TAG}}
          docker push ${{env.ART_REGISTORY}}/${{env.ART_REPO}}/${{ env.IMAGE_PYTHON}}:${{ env.IMAGE_PYTHON_TAG}}

