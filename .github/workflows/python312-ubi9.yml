name: python 3.12 - ubi9

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      publish:
        description: "push to artifactory"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
env:
  message: "This is a test message"

  ART_REGISTORY: "rgnadeem.jfrog.io"
  ART_REPO: "local-docker"
  ART_FOLDER: "python312-ubi9"
  JF_USER: "nadeem.khalid@regions.com"

  IMAGE_PYTHON: "python-3.12"
  IMAGE_PYTHON_TAG: "v3.12.0"

  PROJECT_NAME: "python312-ubi9"

jobs:
  build-push-base-images:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      packages: write
      id-token: write

    steps:
      - name: env
        run: |
          echo ${{ env.message }}
          echo ${{ env.ART_REGISTORY }}
          echo ${{ env.ART_REPO }}
          echo ${{ env.ART_FOLDER }}
          echo ${{ env.JF_USER }}
          echo ${{ env.IMAGE_PYTHON }}
          echo ${{ env.IMAGE_PYTHON_TAG }}
          echo ${{ env.PROJECT_NAME }}


      - name : Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: checkout
        uses: actions/checkout@v4

        # build docker image from Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login to Jfrog
        uses: docker/login-action@v2
        with:
          username: ${{ env.JF_USER }}
          password: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}
          registry: ${{ env.ART_REGISTORY }}

      - name: build docker python-3.12 image
        run: |
          docker build -f ./${{env.PROJECT_NAME}}/Dockerfile \
                -t ${{env.IMAGE_PYTHON}} \
                --build-arg IMAGE_NAME="${{env.IMAGE_PYTHON}}" .
          docker images
          docker tag ${{ env.IMAGE_PYTHON}} ${{env.ART_REGISTORY}}/${{env.ART_REPO}}/${{ env.IMAGE_PYTHON}}:${{ env.IMAGE_PYTHON_TAG}}
          docker push ${{env.ART_REGISTORY}}/${{env.ART_REPO}}/${{ env.IMAGE_PYTHON}}:${{ env.IMAGE_PYTHON_TAG}}

